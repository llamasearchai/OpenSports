[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "OpenSports"
version = "1.0.0"
description = "OpenSports: Elite Global Sports Data Analytics Platform with AI Agents"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Nik Jois", email = "nikjois@llamaearch.ai"}
]
classifiers = [
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

dependencies = [
    # Core ML and Analytics
    "scikit-learn==1.3.0",
    "torch==2.0.1",
    "prophet==1.1.4",
    "shap==0.42.1",
    "dowhy==0.10.0",
    "umap-learn==0.5.4",
    "xgboost==1.7.6",
    "lightgbm==4.1.0",
    "catboost==1.2.2",
    "optuna==3.4.0",
    
    # OpenAI and AI Agents
    "openai==1.3.5",
    "openai-python==0.28.1",
    "langchain==0.0.340",
    "langchain-openai==0.0.2",
    "tiktoken==0.5.1",
    
    # Data Management and Storage
    "datasette==0.64.5",
    "sqlite-utils==3.35.2",
    "llm==0.12",
    "duckdb==0.9.2",
    "polars==0.19.19",
    "pyarrow==14.0.1",
    
    # API and Web Framework
    "fastapi==0.103.1",
    "uvicorn[standard]==0.24.0",
    "pydantic==2.5.0",
    "httpx==0.25.2",
    "websockets==12.0",
    
    # Sports Data APIs
    "requests==2.31.0",
    "aiohttp==3.9.1",
    "beautifulsoup4==4.12.2",
    "selenium==4.15.2",
    "scrapy==2.11.0",
    
    # Real-time Processing
    "kafka-python==2.0.2",
    "redis==5.0.1",
    "celery==5.3.4",
    "apache-airflow==2.7.3",
    
    # Visualization and Dashboards
    "plotly==5.17.0",
    "dash==2.14.2",
    "streamlit==1.28.2",
    "bokeh==3.3.2",
    "altair==5.2.0",
    
    # Monitoring and Observability
    "structlog==23.1.0",
    "opentelemetry-api==1.19.0",
    "opentelemetry-sdk==1.19.0",
    "opentelemetry-instrumentation-fastapi==0.40b0",
    "prometheus-client==0.19.0",
    "sentry-sdk[fastapi]==1.38.0",
    
    # Data Quality and Testing
    "great-expectations==0.17.16",
    "pandera==0.17.2",
    "deepdiff==6.7.1",
    
    # Geospatial and Mapping
    "geopandas==0.14.1",
    "folium==0.15.0",
    "geopy==2.4.1",
    
    # Time Series and Financial
    "yfinance==0.2.28",
    "pandas-ta==0.3.14b0",
    "ta-lib==0.4.28",
    
    # Security and Authentication
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "python-multipart==0.0.6",
    
    # Configuration and Environment
    "python-dotenv==1.0.0",
    "pydantic-settings==2.1.0",
    "click==8.1.7",
    
    # Utilities
    "rich==13.7.0",
    "typer==0.9.0",
    "tqdm==4.66.1",
    "joblib==1.3.2",
    "numpy==1.24.4",
    "pandas==2.1.4",
    "scipy==1.11.4",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
    "pytest-asyncio==0.21.1",
    "pytest-mock==3.12.0",
    "ruff==0.1.6",
    "black==23.11.0",
    "mypy==1.7.1",
    "pre-commit==3.6.0",
    "sphinx==7.2.6",
    "sphinx-rtd-theme==1.3.0",
    "jupyter==1.0.0",
    "ipykernel==6.27.1",
    "notebook==7.0.6",
]

gpu = [
    "torch[cuda]==2.0.1",
    "tensorflow-gpu==2.13.0",
    "cupy-cuda12x==12.3.0",
]

cloud = [
    "boto3==1.34.0",
    "google-cloud-storage==2.10.0",
    "azure-storage-blob==12.19.0",
    "snowflake-connector-python==3.6.0",
]

[project.scripts]
opensports = "opensports.cli:main"
opensports-api = "opensports.api.main:run_server"
opensports-dashboard = "opensports.ui.dashboard:main"

[project.urls]
Homepage = "https://github.com/nikjois/opensports"
Documentation = "https://opensports.readthedocs.io"
Repository = "https://github.com/nikjois/opensports"
Issues = "https://github.com/nikjois/opensports/issues"

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "W", "F", "I", "UP", "PL", "PT", "B", "C4", "SIM", "TCH"]
ignore = ["E501", "PLR0913", "PLR0915"]

[tool.ruff.lint]
select = ["E", "W", "F", "I", "UP", "PL", "PT", "B", "C4", "SIM", "TCH"]
ignore = ["E501", "PLR0913", "PLR0915"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=opensports --cov-report=html --cov-report=term-missing"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["opensports"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
] 